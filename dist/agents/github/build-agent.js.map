{"version":3,"file":"build-agent.js","sources":["../../../src/agents/github/build-agent.ts"],"sourcesContent":["import * as core from '@actions/core'\r\nimport * as exe from '@actions/exec'\r\nimport * as io from '@actions/io'\r\nimport { BuildAgentBase, IBuildAgent, IExecResult } from '@agents/common'\r\n\r\nexport class BuildAgent extends BuildAgentBase implements IBuildAgent {\r\n    agentName = 'GitHub Actions'\r\n\r\n    sourceDirVariable = 'GITHUB_WORKSPACE'\r\n    tempDirVariable = 'RUNNER_TEMP'\r\n    cacheDirVariable = 'RUNNER_TOOL_CACHE'\r\n\r\n    addPath = (inputPath: string): void => core.addPath(inputPath)\r\n\r\n    debug = (message: string): void => core.debug(message)\r\n\r\n    info = (message: string): void => core.info(message)\r\n\r\n    warn = (message: string): void => core.warning(message)\r\n\r\n    error = (message: string): void => core.error(message)\r\n\r\n    async exec(exec: string, args: string[]): Promise<IExecResult> {\r\n        const dotnetPath = await io.which(exec, true)\r\n        const { exitCode, stdout, stderr } = await exe.getExecOutput(`\"${dotnetPath}\"`, args)\r\n        return {\r\n            code: exitCode,\r\n            error: null,\r\n            stderr,\r\n            stdout\r\n        }\r\n    }\r\n\r\n    setFailed = (message: string, _: boolean): void => core.setFailed(message)\r\n\r\n    setOutput = (name: string, value: string): void => core.setOutput(name, value)\r\n\r\n    setSucceeded(_message: string, _done?: boolean): void {\r\n        //\r\n    }\r\n\r\n    setVariable = (name: string, value: string): void => core.exportVariable(name, value)\r\n\r\n    which = async (tool: string, check?: boolean): Promise<string> => io.which(tool, check)\r\n}\r\n"],"names":["core.addPath","core.debug","core.info","core.warning","core.error","io.which","exe.getExecOutput","core.setFailed","core.setOutput","core.exportVariable"],"mappings":";;;AAKO,MAAM,mBAAmB,cAAsC,CAAA;AAAA,EAClE,SAAY,GAAA,gBAAA,CAAA;AAAA,EAEZ,iBAAoB,GAAA,kBAAA,CAAA;AAAA,EACpB,eAAkB,GAAA,aAAA,CAAA;AAAA,EAClB,gBAAmB,GAAA,mBAAA,CAAA;AAAA,EAEnB,OAAU,GAAA,CAAC,SAA4B,KAAAA,oBAAa,SAAS,CAAA,CAAA;AAAA,EAE7D,KAAQ,GAAA,CAAC,OAA0B,KAAAC,kBAAW,OAAO,CAAA,CAAA;AAAA,EAErD,IAAO,GAAA,CAAC,OAA0B,KAAAC,iBAAU,OAAO,CAAA,CAAA;AAAA,EAEnD,IAAO,GAAA,CAAC,OAA0B,KAAAC,oBAAa,OAAO,CAAA,CAAA;AAAA,EAEtD,KAAQ,GAAA,CAAC,OAA0B,KAAAC,kBAAW,OAAO,CAAA,CAAA;AAAA,EAErD,MAAM,IAAK,CAAA,IAAA,EAAc,IAAsC,EAAA;AAC3D,IAAA,MAAM,UAAa,GAAA,MAAMC,OAAG,CAAM,MAAM,IAAI,CAAA,CAAA;AAC5C,IAAM,MAAA,EAAE,QAAU,EAAA,MAAA,EAAQ,MAAO,EAAA,GAAI,MAAMC,eAAkB,CAAA,CAAA,CAAA,EAAI,UAAU,CAAA,CAAA,CAAA,EAAK,IAAI,CAAA,CAAA;AACpF,IAAO,OAAA;AAAA,MACH,IAAM,EAAA,QAAA;AAAA,MACN,KAAO,EAAA,IAAA;AAAA,MACP,MAAA;AAAA,MACA,MAAA;AAAA,KACJ,CAAA;AAAA,GACJ;AAAA,EAEA,YAAY,CAAC,OAAA,EAAiB,CAAqB,KAAAC,sBAAe,OAAO,CAAA,CAAA;AAAA,EAEzE,YAAY,CAAC,IAAA,EAAc,UAAwBC,qBAAK,CAAU,MAAM,KAAK,CAAA,CAAA;AAAA,EAE7E,YAAA,CAAa,UAAkB,KAAuB,EAAA;AAAA,GAEtD;AAAA,EAEA,cAAc,CAAC,IAAA,EAAc,UAAwBC,0BAAK,CAAe,MAAM,KAAK,CAAA,CAAA;AAAA,EAEpF,QAAQ,OAAO,IAAA,EAAc,UAAqCJ,OAAG,CAAM,MAAM,KAAK,CAAA,CAAA;AAC1F;;;;"}