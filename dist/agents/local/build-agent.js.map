{"version":3,"file":"build-agent.js","sources":["../../../src/agents/local/build-agent.ts"],"sourcesContent":["import * as process from 'node:process'\r\nimport * as util from 'node:util'\r\nimport { exec as execNonPromise } from 'node:child_process'\r\n\r\nimport { BuildAgentBase, IBuildAgent, IExecResult } from '@agents/common'\r\n\r\nexport class BuildAgent extends BuildAgentBase implements IBuildAgent {\r\n    agentName = 'Local'\r\n\r\n    sourceDirVariable = 'AGENT_SOURCE_DIR'\r\n    tempDirVariable = 'AGENT_TEMP_DIR'\r\n    cacheDirVariable = 'AGENT_TOOLS_DIR'\r\n\r\n    debug = (message: string): void => console.log(`[debug] ${message}`)\r\n\r\n    info = (message: string): void => console.log(`[info] - ${message}`)\r\n\r\n    warn = (message: string): void => console.warn(`[warn] - ${message}`)\r\n\r\n    error = (message: string): void => console.error(`[error] - ${message}`)\r\n\r\n    async exec(cmd: string, args: string[]): Promise<IExecResult> {\r\n        const exec = util.promisify(execNonPromise)\r\n\r\n        try {\r\n            const { stdout, stderr } = await exec(`${cmd} ${args.join(' ')}`)\r\n            return {\r\n                code: 0,\r\n                error: null,\r\n                stderr,\r\n                stdout\r\n            }\r\n        } catch (e) {\r\n            const error = e as Error & { code: number; stderr: string; stdout: string }\r\n            return {\r\n                code: error.code,\r\n                error,\r\n                stderr: error.stderr,\r\n                stdout: error.stdout\r\n            }\r\n        }\r\n    }\r\n\r\n    setFailed = (message: string, done?: boolean): void => this.error(`setFailed - ${message} - ${done}`)\r\n\r\n    setOutput = (name: string, value: string): void => this.debug(`setOutput - ${name} - ${value}`)\r\n\r\n    setSucceeded = (message: string, done?: boolean): void => this.info(`setSucceeded - ${message} - ${done}`)\r\n\r\n    setVariable(name: string, value: string): void {\r\n        this.debug(`setVariable - ${name} - ${value}`)\r\n        process.env[name] = value\r\n    }\r\n}\r\n"],"names":["exec","execNonPromise"],"mappings":";;;;;AAMO,MAAM,mBAAmB,cAAsC,CAAA;AAAA,EAClE,SAAY,GAAA,OAAA,CAAA;AAAA,EAEZ,iBAAoB,GAAA,kBAAA,CAAA;AAAA,EACpB,eAAkB,GAAA,gBAAA,CAAA;AAAA,EAClB,gBAAmB,GAAA,iBAAA,CAAA;AAAA,EAEnB,QAAQ,CAAC,OAAA,KAA0B,QAAQ,GAAI,CAAA,CAAA,QAAA,EAAW,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,EAEnE,OAAO,CAAC,OAAA,KAA0B,QAAQ,GAAI,CAAA,CAAA,SAAA,EAAY,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,EAEnE,OAAO,CAAC,OAAA,KAA0B,QAAQ,IAAK,CAAA,CAAA,SAAA,EAAY,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,EAEpE,QAAQ,CAAC,OAAA,KAA0B,QAAQ,KAAM,CAAA,CAAA,UAAA,EAAa,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,EAEvE,MAAM,IAAK,CAAA,GAAA,EAAa,IAAsC,EAAA;AAC1D,IAAM,MAAAA,MAAA,GAAO,IAAK,CAAA,SAAA,CAAUC,IAAc,CAAA,CAAA;AAE1C,IAAI,IAAA;AACA,MAAA,MAAM,EAAE,MAAA,EAAQ,MAAO,EAAA,GAAI,MAAMD,MAAA,CAAK,CAAG,EAAA,GAAG,CAAI,CAAA,EAAA,IAAA,CAAK,IAAK,CAAA,GAAG,CAAC,CAAE,CAAA,CAAA,CAAA;AAChE,MAAO,OAAA;AAAA,QACH,IAAM,EAAA,CAAA;AAAA,QACN,KAAO,EAAA,IAAA;AAAA,QACP,MAAA;AAAA,QACA,MAAA;AAAA,OACJ,CAAA;AAAA,aACK,CAAG,EAAA;AACR,MAAA,MAAM,KAAQ,GAAA,CAAA,CAAA;AACd,MAAO,OAAA;AAAA,QACH,MAAM,KAAM,CAAA,IAAA;AAAA,QACZ,KAAA;AAAA,QACA,QAAQ,KAAM,CAAA,MAAA;AAAA,QACd,QAAQ,KAAM,CAAA,MAAA;AAAA,OAClB,CAAA;AAAA,KACJ;AAAA,GACJ;AAAA,EAEA,SAAA,GAAY,CAAC,OAAA,EAAiB,IAAyB,KAAA,IAAA,CAAK,MAAM,CAAe,YAAA,EAAA,OAAO,CAAM,GAAA,EAAA,IAAI,CAAE,CAAA,CAAA,CAAA;AAAA,EAEpG,SAAA,GAAY,CAAC,IAAA,EAAc,KAAwB,KAAA,IAAA,CAAK,MAAM,CAAe,YAAA,EAAA,IAAI,CAAM,GAAA,EAAA,KAAK,CAAE,CAAA,CAAA,CAAA;AAAA,EAE9F,YAAA,GAAe,CAAC,OAAA,EAAiB,IAAyB,KAAA,IAAA,CAAK,KAAK,CAAkB,eAAA,EAAA,OAAO,CAAM,GAAA,EAAA,IAAI,CAAE,CAAA,CAAA,CAAA;AAAA,EAEzG,WAAA,CAAY,MAAc,KAAqB,EAAA;AAC3C,IAAA,IAAA,CAAK,KAAM,CAAA,CAAA,cAAA,EAAiB,IAAI,CAAA,GAAA,EAAM,KAAK,CAAE,CAAA,CAAA,CAAA;AAC7C,IAAQ,OAAA,CAAA,GAAA,CAAI,IAAI,CAAI,GAAA,KAAA,CAAA;AAAA,GACxB;AACJ;;;;"}