{"version":3,"file":"build-agent.js","sources":["../../../src/agents/azure/task-command.ts","../../../src/agents/azure/build-agent.ts"],"sourcesContent":["//\r\n// Command Format:\r\n//    ##vso[artifact.command key=value;key=value]user message\r\n//\r\n// Examples:\r\n//    ##vso[task.progress value=58]\r\n//    ##vso[task.issue type=warning;]This is the user warning message\r\n//\r\nconst CMD_PREFIX = '##vso['\r\n\r\nexport enum TaskResult {\r\n    Succeeded = 0,\r\n    SucceededWithIssues = 1,\r\n    Failed = 2,\r\n    Cancelled = 3,\r\n    Skipped = 4\r\n}\r\n\r\nexport class TaskCommand {\r\n    constructor(\r\n        private readonly command: string,\r\n        private properties: Record<string, string> | null,\r\n        private message: string\r\n    ) {\r\n        if (!command) {\r\n            this.command = 'missing.command'\r\n        }\r\n    }\r\n\r\n    toString(): string {\r\n        let cmdStr = CMD_PREFIX + this.command\r\n\r\n        if (this.properties && Object.keys(this.properties).length > 0) {\r\n            cmdStr += ' '\r\n            for (const key in this.properties) {\r\n                if (this.properties.hasOwnProperty(key)) {\r\n                    const val = this.properties[key]\r\n                    if (val) {\r\n                        // safely append the val - avoid blowing up when attempting to\r\n                        // call .replace() if message is not a string for some reason\r\n                        cmdStr += `${key}=${escape(`${val || ''}`)};`\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        cmdStr += ']'\r\n\r\n        // safely append the message - avoid blowing up when attempting to\r\n        // call .replace() if message is not a string for some reason\r\n        const message = `${this.message || ''}`\r\n        cmdStr += escapeData(message)\r\n\r\n        return cmdStr\r\n    }\r\n}\r\n\r\nfunction escapeData(s: string): string {\r\n    return s.replace(/%/g, '%AZP25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A')\r\n}\r\n\r\nfunction escape(s: string): string {\r\n    return s.replace(/%/g, '%AZP25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A').replace(/]/g, '%5D').replace(/;/g, '%3B')\r\n}\r\n","import { BuildAgentBase, IBuildAgent } from '@agents/common'\r\nimport { TaskCommand, TaskResult } from './task-command'\r\n\r\nexport class BuildAgent extends BuildAgentBase implements IBuildAgent {\r\n    agentName = 'Azure Pipelines'\r\n\r\n    sourceDirVariable = 'BUILD_SOURCESDIRECTORY'\r\n    tempDirVariable = 'AGENT_TEMPDIRECTORY'\r\n    cacheDirVariable = 'AGENT_TOOLSDIRECTORY'\r\n\r\n    addPath(inputPath: string): void {\r\n        super.addPath(inputPath)\r\n        this._command('task.prependpath', null, inputPath)\r\n    }\r\n\r\n    info = (message: string): void => this.debug(message)\r\n\r\n    debug = (message: string): void => this._command('task.debug', null, message)\r\n\r\n    warning = (message: string): void => this._command('task.issue', { type: 'warning' }, message)\r\n\r\n    error = (message: string): void => this._command('task.issue', { type: 'error' }, message)\r\n\r\n    setSucceeded = (message: string, done?: boolean): void => this._setResult(TaskResult.Succeeded, message, done)\r\n\r\n    setFailed = (message: string, done?: boolean): void => this._setResult(TaskResult.Failed, message, done)\r\n\r\n    setOutput = (name: string, value: string): void => this._setVariable(name, value, true)\r\n\r\n    setVariable = (name: string, value: string): void => this._setVariable(name, value)\r\n\r\n    private _command(command: string, properties: Record<string, string> | null, message: string): void {\r\n        const taskCmd = new TaskCommand(command, properties, message)\r\n        console.log(taskCmd.toString())\r\n    }\r\n\r\n    private _setResult(result: TaskResult, message: string, done?: boolean): void {\r\n        this.debug(`task result: ${TaskResult[result]}`)\r\n        // add an error issue\r\n        if (result === TaskResult.Failed && message) {\r\n            this.error(message)\r\n        } else if (result === TaskResult.SucceededWithIssues && message) {\r\n            this.warning(message)\r\n        }\r\n        // task.complete\r\n        const properties: Record<string, string> = { result: TaskResult[result] }\r\n        if (done) {\r\n            properties['done'] = 'true'\r\n        }\r\n        this._command('task.complete', properties, message)\r\n    }\r\n\r\n    private _setVariable(name: string, val: string, isOutput = false): void {\r\n        const key: string = this._getVariableKey(name)\r\n        const varValue = val || ''\r\n        process.env[key] = varValue\r\n\r\n        this._command(\r\n            'task.setvariable',\r\n            {\r\n                variable: name || '',\r\n                isOutput: (isOutput || false).toString(),\r\n                issecret: 'false'\r\n            },\r\n            varValue\r\n        )\r\n    }\r\n\r\n    private _getVariableKey(name: string): string {\r\n        return name.replace(/\\./g, '_').replace(/ /g, '_').toUpperCase()\r\n    }\r\n}\r\n"],"names":["TaskResult"],"mappings":"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"}