{"version":3,"file":"agent.js","sources":["../../../src/agents/azure/index.ts"],"sourcesContent":["import * as taskLib from 'azure-pipelines-task-lib/task'\r\nimport * as toolLib from 'azure-pipelines-tool-lib/tool'\r\n\r\nimport { IBuildAgent, IExecResult } from '@agents/common'\r\n\r\nexport class BuildAgent implements IBuildAgent {\r\n    get agentName(): string {\r\n        return 'Azure Pipelines'\r\n    }\r\n\r\n    addPath(inputPath: string): void {\r\n        toolLib.prependPath(inputPath)\r\n    }\r\n\r\n    debug(message: string): void {\r\n        taskLib.debug(message)\r\n    }\r\n\r\n    info(message: string): void {\r\n        taskLib.debug(message)\r\n    }\r\n\r\n    warn(message: string): void {\r\n        taskLib.warning(message)\r\n    }\r\n\r\n    error(message: string): void {\r\n        taskLib.error(message)\r\n    }\r\n\r\n    async exec(exec: string, args: string[]): Promise<IExecResult> {\r\n        const tr = taskLib.tool(exec)\r\n        tr.arg(args)\r\n\r\n        const result = tr.execSync()\r\n        return Promise.resolve({\r\n            code: result.code,\r\n            error: result.error,\r\n            stderr: result.stderr,\r\n            stdout: result.stdout\r\n        })\r\n    }\r\n\r\n    async cacheDir(sourceDir: string, tool: string, version: string, arch?: string): Promise<string> {\r\n        return toolLib.cacheDir(sourceDir, tool, version, arch)\r\n    }\r\n\r\n    dirExists(file: string): boolean {\r\n        return taskLib.exist(file) && taskLib.stats(file).isDirectory()\r\n    }\r\n\r\n    fileExists(file: string): boolean {\r\n        return taskLib.exist(file) && taskLib.stats(file).isFile()\r\n    }\r\n\r\n    findLocalTool(toolName: string, versionSpec: string, arch?: string): string | null {\r\n        return toolLib.findLocalTool(toolName, versionSpec, arch)\r\n    }\r\n\r\n    getSourceDir(): string | undefined {\r\n        return this.getVariable('Build.SourcesDirectory')\r\n    }\r\n\r\n    getTempRootDir(): string | undefined {\r\n        return this.getVariable('Agent.TempDirectory')\r\n    }\r\n\r\n    getCacheRootDir(): string | undefined {\r\n        return this.getVariable('Agent.ToolsDirectory')\r\n    }\r\n\r\n    getBooleanInput(input: string, required?: boolean): boolean {\r\n        return taskLib.getBoolInput(input, required)\r\n    }\r\n\r\n    getInput(input: string, required?: boolean): string {\r\n        return taskLib.getInput(input, required)?.trim() ?? ''\r\n    }\r\n\r\n    getListInput(input: string, required?: boolean): string[] {\r\n        return this.getInput(input, required)\r\n            .split('\\n')\r\n            .filter(x => x !== '')\r\n    }\r\n\r\n    setFailed(message: string, done?: boolean): void {\r\n        taskLib.setResult(taskLib.TaskResult.Failed, message, done)\r\n    }\r\n\r\n    setOutput(name: string, value: string): void {\r\n        taskLib.setVariable(name, value, false, true)\r\n    }\r\n\r\n    setSucceeded(message: string, done?: boolean): void {\r\n        taskLib.setResult(taskLib.TaskResult.Succeeded, message, done)\r\n    }\r\n\r\n    getVariable(name: string): string | undefined {\r\n        return taskLib.getVariable(name)\r\n    }\r\n\r\n    setVariable(name: string, value: string): void {\r\n        taskLib.setVariable(name, value)\r\n    }\r\n\r\n    async which(tool: string, check?: boolean): Promise<string> {\r\n        return Promise.resolve(taskLib.which(tool, check))\r\n    }\r\n}\r\n"],"names":["toolLib.prependPath","taskLib.debug","taskLib.warning","taskLib.error","taskLib.tool","toolLib.cacheDir","taskLib.exist","taskLib.stats","toolLib.findLocalTool","taskLib.getBoolInput","taskLib.getInput","taskLib.setResult","taskLib.TaskResult","taskLib.setVariable","taskLib.getVariable","taskLib.which"],"mappings":"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"}